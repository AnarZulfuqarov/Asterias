import "./index.scss";
import backBak from "../../../assets/Group42.png";
import icon from "../../../assets/icob2.png";
import xet from "../../../assets/Path (top).png";
import xet1 from "../../../assets/Path (bottom).png";
import xet2 from "../../../assets/Path (top1).png";
import { useNavigate, useParams } from "react-router-dom";
import { useTranslation } from "react-i18next";
import { useState } from "react";
import flagAz from "../../../assets/azerbaijan.png";
import flagEn from "../../../assets/uk.png";
import flagRu from "../../../assets/circle.png";
import { FaChevronDown } from "react-icons/fa";
import { useGetOffersByIdQuery } from "../../../services/userApi.jsx";
import {OFFER_IMAGES} from "../../../contants.js";

function ServDetailPageTwo() {
    const navigate = useNavigate();
    const { t, i18n } = useTranslation();
    const [langDropdownOpen, setLangDropdownOpen] = useState(false);
    const [langTimeoutId, setLangTimeoutId] = useState(null);
    const { id } = useParams();
    const { data: getOffersById, isLoading, error } = useGetOffersByIdQuery(id);
    const offer = getOffersById?.data;

    const toggleLangDropdown = () => {
        setLangDropdownOpen(!langDropdownOpen);
    };

    const handleLanguageChange = (lng) => {
        i18n.changeLanguage(lng);
        localStorage.setItem("asteriasLang", lng);
        setLangDropdownOpen(false);
    };

    let currentFlag = flagAz;
    let currentTitle = "Az";
    if (i18n.language?.startsWith("en")) {
        currentTitle = "En";
        currentFlag = flagEn;
    } else if (i18n.language?.startsWith("ru")) {
        currentTitle = "Ru";
        currentFlag = flagRu;
    } else if (i18n.language?.startsWith("az")) {
        currentTitle = "Az";
        currentFlag = flagAz;
    }

    const handleLangMouseEnter = () => {
        if (langTimeoutId) {
            clearTimeout(langTimeoutId);
            setLangTimeoutId(null);
        }
    };

    const handleLangMouseLeave = () => {
        const timeout = setTimeout(() => {
            setLangDropdownOpen(false);
        }, 1000);
        setLangTimeoutId(timeout);
    };

    if (isLoading) {
        return <div>Loading...</div>;
    }

    if (error || !offer) {
        return <div>Error loading offer details or offer not found.</div>;
    }

    // Determine the text based on the current language
    const offerName = i18n.language?.startsWith("en")
        ? offer.nameEng
        : i18n.language?.startsWith("ru")
            ? offer.nameRu
            : offer.name;
    const offerDescription = i18n.language?.startsWith("en")
        ? offer.descriptionEng
        : i18n.language?.startsWith("ru")
            ? offer.descriptionRu
            : offer.description;
    const offerPeriod = i18n.language?.startsWith("en")
        ? offer.periodEng
        : i18n.language?.startsWith("ru")
            ? offer.periodRu
            : offer.period;
    const offerAgeLimit = offer.ageLimit;

    // Construct image URLs for the offer, falling back to the default main image if needed
    const images = offer.offerImageNames?.length
        ? offer.offerImageNames.map((imageName) => `${imageName}`)
        : [main, main, main]; // Fallback to main image if offerImageNames is empty

    return (
        <div id={"servDetailTwo"}>
            <div className={"container"}>
                <div className={"back"} onClick={() => navigate("/")}>
                    <img src={backBak} alt="Back" />
                </div>
                <div className={"row"} style={{ alignItems: "start" }}>
                    <div className={"col-6 col-md-12 col-sm-12 col-xs-12"}>
                        <div className={"text"}>
                            <div className={"head"}>
                                <h2>
                                    <img src={icon} alt="Icon" /> {offerName}
                                </h2>
                            </div>
                            <p>{offerDescription}</p>
                            <div className={"functions"}>
                                <div
                                    className={"function1"}
                                    style={{
                                        width:
                                            i18n.language === "az"
                                                ? "224px"
                                                : i18n.language === "en"
                                                    ? "224px"
                                                    : "300px",
                                    }}
                                >
                                    <div className={"overlay"}></div>
                                    <div className={"content"}>
                                        <svg
                                            xmlns="http://www.w3.org/2000/svg"
                                            width="24"
                                            height="24"
                                            viewBox="0 0 24 24"
                                            fill="none"
                                        >
                                            <path
                                                d="M6.8076 0C7.03038 0 7.24404 0.0884998 7.40157 0.24603C7.5591 0.403561 7.6476 0.617218 7.6476 0.84V2.4108H16.668V0.8508C16.668 0.628018 16.7565 0.414361 16.914 0.25683C17.0716 0.0992998 17.2852 0.0108 17.508 0.0108C17.7308 0.0108 17.9444 0.0992998 18.102 0.25683C18.2595 0.414361 18.348 0.628018 18.348 0.8508V2.4108H21.6C22.2363 2.4108 22.8466 2.66349 23.2966 3.11332C23.7467 3.56315 23.9997 4.17329 24 4.8096V21.6012C23.9997 22.2375 23.7467 22.8477 23.2966 23.2975C22.8466 23.7473 22.2363 24 21.6 24H2.4C1.76369 24 1.15342 23.7473 0.703368 23.2975C0.253315 22.8477 0.000318156 22.2375 0 21.6012L0 4.8096C0.000318156 4.17329 0.253315 3.56315 0.703368 3.11332C1.15342 2.66349 1.76369 2.4108 2.4 2.4108H5.9676V0.8388C5.96792 0.616226 6.05656 0.402877 6.21405 0.245606C6.37155 0.0883348 6.58503 -2.27116e-07 6.8076 0ZM1.68 9.2904V21.6012C1.68 21.6958 1.69862 21.7894 1.73481 21.8767C1.77099 21.9641 1.82403 22.0435 1.89088 22.1103C1.95774 22.1772 2.03711 22.2302 2.12447 22.2664C2.21182 22.3026 2.30545 22.3212 2.4 22.3212H21.6C21.6946 22.3212 21.7882 22.3026 21.8755 22.2664C21.9629 22.2302 22.0423 22.1772 22.1091 22.1103C22.176 22.0435 22.229 21.9641 22.2652 21.8767C22.3014 21.7894 22.32 21.6958 22.32 21.6012V9.3072L1.68 9.2904ZM8.0004 17.5428V19.542H6V17.5428H8.0004ZM12.9996 17.5428V19.542H11.0004V17.5428H12.9996ZM18 17.5428V19.542H15.9996V17.5428H18ZM8.0004 12.7704V14.7696H6V12.7704H8.0004ZM12.9996 12.7704V14.7696H11.0004V12.7704H12.9996ZM18 12.7704V14.7696H15.9996V12.7704H18ZM5.9676 4.0896H2.4C2.30545 4.0896 2.21182 4.10822 2.12447 4.14441C2.03711 4.18059 1.95774 4.23362 1.89088 4.30048C1.82403 4.36734 1.77099 4.44671 1.73481 4.53407C1.69862 4.62142 1.68 4.71505 1.68 4.8096V7.6116L22.32 7.6284V4.8096C22.32 4.71505 22.3014 4.62142 22.2652 4.53407C22.229 4.44671 22.176 4.36734 22.1091 4.30048C22.0423 4.23362 21.9629 4.18059 21.8755 4.14441C21.7882 4.10822 21.6946 4.0896 21.6 4.0896H18.348V5.2044C18.348 5.42718 18.2595 5.64084 18.102 5.79837C17.9444 5.9559 17.7308 6.0444 17.508 6.0444C17.2852 6.0444 17.0716 5.9559 16.914 5.79837C16.7565 5.64084 16.668 5.42718 16.668 5.2044V4.0896H7.6476V5.1936C7.6476 5.41638 7.5591 5.63004 7.40157 5.78757C7.24404 5.9451 7.03038 6.0336 6.8076 6.0336C6.58482 6.0336 6.37116 5.9451 6.21363 5.78757C6.0561 5.63004 5.9676 5.41638 5.9676 5.1936V4.0896Z"
                                                fill="#848484"
                                            />
                                        </svg>
                                        {t("servDetailTwo.functions.duration_label")} :
                                        <span>{offerPeriod}</span>
                                    </div>
                                </div>
                                <div className={"function2"}>
                                    <div className={"overlay"}></div>
                                    <div className={"content"}>
                                        <svg
                                            xmlns="http://www.w3.org/2000/svg"
                                            width="25"
                                            height="25"
                                            viewBox="0 0 25 25"
                                            fill="none"
                                        >
                                            <path
                                                d="M6 8.5C6 7.83696 6.26339 7.20107 6.73223 6.73223C7.20107 6.26339 7.83696 6 8.5 6C9.16304 6 9.79893 6.26339 10.2678 6.73223C10.7366 7.20107 11 7.83696 11 8.5C11 9.16304 10.7366 9.79893 10.2678 10.2678C9.79893 10.7366 9.16304 11 8.5 11C7.83696 11 7.20107 10.7366 6.73223 10.2678C6.26339 9.79893 6 9.16304 6 8.5ZM8.5 4.5C7.43913 4.5 6.42172 4.92143 5.67157 5.67157C4.92143 6.42172 4.5 7.43913 4.5 8.5C4.5 9.56087 4.92143 10.5783 5.67157 11.3284C6.42172 12.0786 7.43913 12.5 8.5 12.5C9.56087 12.5 10.5783 12.0786 11.3284 11.3284C12.0786 10.5783 12.5 9.56087 12.5 8.5C12.5 7.43913 12.0786 6.42172 11.3284 5.67157C10.5783 4.92143 9.56087 4.5 8.5 4.5ZM16 9.5C16 9.10218 16.158 8.72064 16.4393 8.43934C16.7206 8.15804 17.1022 8 17.5 8C17.8978 8 18.2794 8.15804 18.5607 8.43934C18.842 8.72064 19 9.10218 19 9.5C19 9.89782 18.842 10.2794 18.5607 10.5607C18.2794 10.842 17.8978 11 17.5 11C17.1022 11 16.7206 10.842 16.4393 10.5607C16.158 10.2794 16 9.89782 16 9.5ZM17.5 6.5C16.7044 6.5 15.9413 6.81607 15.3787 7.37868C14.8161 7.94129 14.5 8.70435 14.5 9.5C14.5 10.2956 14.8161 11.0587 15.3787 11.6213C15.9413 12.1839 16.7044 12.5 17.5 12.5C18.2956 12.5 19.0587 12.1839 19.6213 11.6213C20.1839 11.0587 20.5 10.2956 20.5 9.5C20.5 8.70435 20.1839 7.94129 19.6213 7.37868C19.0587 6.81607 18.2956 6.5 17.5 6.5ZM4.75 14.5C4.15326 14.5 3.58097 14.7371 3.15901 15.159C2.73705 15.581 2.5 16.1533 2.5 16.75V17.028C2.50105 17.0975 2.50572 17.167 2.514 17.236C2.59712 17.98 2.86453 18.6915 3.292 19.306C4.11 20.474 5.672 21.5 8.5 21.5C9.876 21.5 10.953 21.257 11.79 20.873C11.5109 20.4542 11.3009 19.9934 11.168 19.508C10.542 19.798 9.683 20 8.5 20C6.078 20 5.014 19.15 4.52 18.445C4.24041 18.0412 4.06425 17.5748 4.007 17.087L4 17.007V16.75C4 16.5511 4.07902 16.3603 4.21967 16.2197C4.36032 16.079 4.55109 16 4.75 16H11.566C11.8658 15.4455 12.2719 14.9555 12.761 14.558C12.5934 14.5196 12.422 14.5002 12.25 14.5H4.75ZM23 18.25C23 17.2554 22.6049 16.3016 21.9017 15.5983C21.1984 14.8951 20.2446 14.5 19.25 14.5L19.148 14.507C18.9598 14.5329 18.7883 14.6293 18.6684 14.7767C18.5485 14.9241 18.489 15.1115 18.502 15.3011C18.5149 15.4907 18.5994 15.6683 18.7382 15.798C18.8771 15.9278 19.06 15.9999 19.25 16L19.404 16.005C19.9868 16.0439 20.5317 16.3079 20.9233 16.7413C21.315 17.1746 21.5228 17.7433 21.5028 18.327C21.4828 18.9108 21.2366 19.4639 20.8162 19.8694C20.3958 20.275 19.8341 20.5011 19.25 20.5L19.247 20.505L19.145 20.512C18.9562 20.5379 18.7844 20.6348 18.6644 20.7828C18.5444 20.9309 18.4853 21.1191 18.499 21.3091C18.5128 21.4992 18.5984 21.6769 18.7384 21.8062C18.8784 21.9354 19.0624 22.0065 19.253 22.005V22L19.453 21.995C20.4111 21.9431 21.3128 21.5258 21.9726 20.8292C22.6325 20.1326 23.0001 19.2095 23 18.25ZM16.5 15.25C16.5 15.0511 16.421 14.8603 16.2803 14.7197C16.1397 14.579 15.9489 14.5 15.75 14.5L15.55 14.505C14.5729 14.5555 13.6543 14.9858 12.9901 15.7042C12.3259 16.4225 11.9687 17.372 11.9948 18.35C12.0209 19.3281 12.4282 20.2572 13.1298 20.9391C13.8313 21.621 14.7716 22.0017 15.75 22L15.852 21.993C16.0402 21.9671 16.2117 21.8707 16.3316 21.7233C16.4515 21.5759 16.511 21.3885 16.498 21.1989C16.4851 21.0093 16.4006 20.8317 16.2618 20.702C16.1229 20.5722 15.94 20.5001 15.75 20.5L15.596 20.495C15.0132 20.4561 14.4683 20.1921 14.0767 19.7587C13.685 19.3254 13.4772 18.7567 13.4972 18.173C13.5172 17.5892 13.7634 17.0361 14.1838 16.6306C14.6042 16.225 15.1659 15.9989 15.75 16L15.852 15.993C16.0316 15.9684 16.1961 15.8795 16.3152 15.7429C16.4344 15.6063 16.5 15.4312 16.5 15.25ZM20 18.25C20 18.0511 19.921 17.8603 19.7803 17.7197C19.6397 17.579 19.4489 17.5 19.25 17.5H15.75L15.648 17.507C15.4598 17.5329 15.2883 17.6293 15.1684 17.7767C15.0485 17.9241 14.989 18.1115 15.002 18.3011C15.0149 18.4907 15.0994 18.6683 15.2382 18.798C15.3771 18.9278 15.56 18.9999 15.75 19H19.25L19.352 18.993C19.5316 18.9684 19.6961 18.8795 19.8152 18.7429C19.9344 18.6063 20 18.4312 20 18.25Z"
                                                fill="#676767"
                                            />
                                        </svg>
                                        {t("servDetailTwo.functions.age_label")} :
                                        <span>{offerAgeLimit}</span>
                                    </div>
                                </div>
                            </div>
                            <svg
                                xmlns="http://www.w3.org/2000/svg"
                                width="210"
                                height="92"
                                viewBox="0 0 210 92"
                                fill="none"
                                className={"arrow"}
                            >
                                <path
                                    d="M7.15094 14.1559C13.3897 11.1394 20.0796 8.90107 27.0499 7.49817C31.4797 6.52136 36.4521 5.62048 41.787 4.81244C47.4913 3.91847 53.2777 3.38927 59.1046 3.22867C62.2426 3.15261 65.3936 3.26479 68.5371 3.56449C71.8025 3.84029 75.0493 4.38175 78.2383 5.18233C81.5143 5.96889 84.6965 7.10114 87.7184 8.5554C90.7917 9.9859 93.6585 11.7801 96.2398 13.8888L96.6572 14.2477C96.495 14.3322 96.3037 14.3935 96.1251 14.4738C89.3964 17.5404 84.0604 22.5655 80.92 28.7934C79.3655 31.9694 78.5559 35.4342 78.5405 38.9765C78.5215 42.6869 79.5504 46.3895 81.5291 49.7309C82.5151 51.5186 83.8004 53.1668 85.3365 54.6133C87.0455 56.2453 89.1214 57.5205 91.4063 58.342C93.6439 59.0898 96.0055 59.4074 98.3366 59.2741C100.668 59.1407 102.916 58.5593 104.934 57.568C108.589 55.7704 111.368 52.8304 112.787 49.2592C114.108 45.9967 114.694 42.4955 114.512 38.9558C114.367 35.4753 113.631 32.008 112.333 28.6765C110.702 24.5214 108.318 20.6127 105.282 17.1183C106.316 16.8822 107.369 16.7098 108.435 16.6022C114.717 15.9257 121.159 16.5367 127.295 18.3912C133.027 20.0857 138.49 22.5469 143.497 25.6913C147.883 28.4174 151.915 31.6034 155.503 35.1785C158.478 38.277 161.154 41.5989 163.498 45.1038C167.225 50.5554 170.304 56.3314 172.68 62.3283C174.308 66.341 175.606 70.4444 176.561 74.6032C177.303 77.9445 177.715 80.3818 177.985 82.2784C178.249 83.9216 178.374 85.0094 178.511 85.8478L177.585 84.8701C174.944 82.0827 172.507 79.5994 170.398 77.5468C166.177 73.4566 163.294 71.0008 162.753 71.398C162.212 71.7952 164.101 74.7053 167.614 79.2287C169.367 81.5052 171.517 84.1513 173.967 87.0633L174.896 88.1678C175.29 88.6468 175.728 89.0961 176.203 89.5108C176.513 89.7727 176.845 90.0108 177.197 90.2224C177.645 90.4923 178.128 90.7062 178.633 90.8578C179.673 91.1702 180.779 91.1773 181.789 90.8782C183.044 90.4231 184.181 89.7522 185.14 88.9005L187.549 87.1068C200.694 76.9233 210.598 67.9423 209.6 67.0407C208.601 66.139 197.125 73.646 183.964 83.8253L182.246 85.1817C182.349 84.2889 182.386 83.3879 182.358 82.4844C182.334 79.7925 182.086 77.0953 181.614 74.4162C180.888 70.0016 179.719 65.6359 178.122 61.3745C175.791 54.9811 172.653 48.8205 168.773 43.02C166.236 39.1943 163.324 35.5739 160.075 32.2057C156.134 28.2356 151.687 24.7044 146.838 21.6944C141.26 18.1882 135.167 15.4535 128.771 13.5857C121.667 11.462 114.211 10.791 106.953 11.6221C104.861 11.8536 102.81 12.2787 100.833 12.8908C100.274 12.4009 99.7142 11.911 99.1269 11.4613C96.1985 9.134 92.9591 7.15975 89.4959 5.59166C86.144 4.05941 82.6273 2.87859 79.017 2.07308C75.5785 1.27551 72.0837 0.760215 68.5756 0.533557C65.2911 0.278511 62.003 0.22069 58.7327 0.360465C52.7778 0.634007 46.8763 1.30811 41.076 2.3773C

35.6677 3.33461 30.7161 4.38264 26.2214 5.52139C19.1953 7.18276 12.5322 9.79273 6.44785 13.2668C4.84989 14.2094 3.34046 15.2661 1.93288 16.4276C1.00347 17.2452 0.565368 17.653 0.625054 17.7628C0.684739 17.8726 2.88589 16.3408 7.18391 14.1643L7.15094 14.1559ZM99.362 19.1156C99.8611 18.881 100.386 18.6845 100.91 18.4879C103.886 21.8421 106.183 25.6352 107.686 29.6766C108.776 32.6298 109.371 35.6939 109.451 38.7626C109.56 41.7747 109.014 44.7458 107.845 47.5051C106.749 50.1335 104.658 52.2837 101.932 53.5852C100.603 54.2393 99.1218 54.6237 97.5858 54.7136C96.0499 54.8035 94.4934 54.5967 93.0178 54.1068C90.1374 52.8581 87.816 50.7023 86.5057 48.0591C84.9727 45.3931 84.1968 42.4498 84.252 39.5096C84.3314 36.5929 85.0591 33.7515 86.3914 31.1556C87.7118 28.541 89.5071 26.1638 91.7057 24.1189C93.8952 22.0543 96.4726 20.3599 99.329 19.1072"
                                    fill="#595959"
                                />
                            </svg>
                            <button onClick={() => navigate("/contact")}>
                                {t("servDetailTwo.button")}
                            </button>
                        </div>
                    </div>
                    <div className={"col-6 col-md-12 col-sm-12 col-xs-12"}>
                        <div className={"images"}>
                            <div className={"image1"}>
                                <img src={OFFER_IMAGES + images[0]} alt={`${offerName} Image 1`} />
                            </div>
                            <div className={"image2"}>
                                <img src={OFFER_IMAGES + images[1] || images[0]} alt={`${offerName} Image 2`} />
                            </div>
                            <div className={"image3"}>
                                <img src={OFFER_IMAGES + images[2] || images[0]} alt={`${offerName} Image 3`} />
                            </div>
                            <div className={"image4"}>
                                <img src={xet} alt="Decorative Top Path" />
                            </div>
                            <div className={"image5"}>
                                <img src={xet1} alt="Decorative Bottom Path" />
                            </div>
                            <div className={"image6"}>
                                <img src={xet2} alt="Decorative Top Path 1" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div className="language">
                <div
                    className="dropdown"
                    onClick={toggleLangDropdown}
                    onMouseEnter={handleLangMouseEnter}
                    onMouseLeave={handleLangMouseLeave}
                >
                    <button
                        className="dropbtn"
                        style={{
                            cursor: "pointer",
                        }}
                    >
                        <img src={currentFlag} alt="Current Flag" />
                        {currentTitle}
                        <FaChevronDown className="zakirinChevronu" />
                    </button>
                    <div className={`dropdown-content ${langDropdownOpen ? "show" : ""}`}>
                        <div onClick={() => handleLanguageChange("az")}>
                            <img src={flagAz} alt="AZ Flag" /> {t("navbar.languages.az")}
                        </div>
                        <div onClick={() => handleLanguageChange("en")}>
                            <img src={flagEn} alt="EN Flag" /> {t("navbar.languages.en")}
                        </div>
                        <div onClick={() => handleLanguageChange("ru")}>
                            <img src={flagRu} alt="RU Flag" /> {t("navbar.languages.ru")}
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
}

export default ServDetailPageTwo;